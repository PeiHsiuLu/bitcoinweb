{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Paul2\\\\OneDrive\\\\\\u684C\\u9762\\\\bitcoinweb\\\\bitcoinweb-main\\\\\\u6BD4\\u7279\\u96EA\\u7403DCA\\\\client\\\\src\\\\BitcoinPriceChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale } from 'chart.js';\nimport 'chartjs-adapter-date-fns';\n\n// 註冊ChartJS所需的組件\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, TimeScale);\nconst BitcoinPriceChart = ({\n  range\n}) => {\n  _s();\n  const [chartData, setChartData] = useState({\n    datasets: []\n  });\n\n  // 計算條形大小的函數\n  const calculateBarSize = (start, end) => {\n    const diffTime = Math.abs(new Date(end) - new Date(start));\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    if (diffDays <= 30) {\n      return '1H';\n    } else if (diffDays <= 180) {\n      return '1D';\n    } else if (diffDays <= 540) {\n      return '1W';\n    } else {\n      return '1M';\n    }\n  };\n  useEffect(() => {\n    const fetchHistoricalData = async () => {\n      try {\n        const barSize = calculateBarSize(range.startDate, range.endDate);\n\n        // 轉換為Unix時間戳（毫秒）\n        const startTimestamp = new Date(range.startDate).getTime();\n        const endTimestamp = new Date(range.endDate).getTime();\n        const response = await axios.get('https://www.okx.com/api/v5/market/history-index-candles', {\n          params: {\n            instId: 'BTC-USD',\n            bar: barSize,\n            // 使用Unix時間戳格式\n            before: startTimestamp.toString(),\n            after: endTimestamp.toString(),\n            limit: '100'\n          }\n        });\n        const candleData = response.data.data.map(candle => ({\n          x: new Date(parseInt(candle[0])),\n          y: parseFloat(candle[4])\n        }));\n        setChartData({\n          datasets: [{\n            label: `BTC-USD Historical (${barSize})`,\n            data: candleData,\n            borderColor: 'rgb(33, 150, 243)',\n            backgroundColor: 'rgba(33, 150, 243, 0.5)'\n          }]\n        });\n      } catch (error) {\n        console.error('Error fetching historical data:', error);\n      }\n    };\n    fetchHistoricalData();\n  }, [range]);\n  const options = {\n    responsive: true,\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'day',\n          tooltipFormat: 'MM/dd/yyyy'\n        },\n        title: {\n          display: true,\n          text: 'Date'\n        }\n      },\n      y: {\n        beginAtZero: false,\n        title: {\n          display: true,\n          text: 'Price (USD)'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Historical Bitcoin Price'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-container\",\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(BitcoinPriceChart, \"G3mVgiy1PV35MTQ4k0yxKB3K4MQ=\");\n_c = BitcoinPriceChart;\nexport default BitcoinPriceChart;\nvar _c;\n$RefreshReg$(_c, \"BitcoinPriceChart\");","map":{"version":3,"names":["React","useEffect","useState","Line","axios","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","TimeScale","jsxDEV","_jsxDEV","register","BitcoinPriceChart","range","_s","chartData","setChartData","datasets","calculateBarSize","start","end","diffTime","Math","abs","Date","diffDays","ceil","fetchHistoricalData","barSize","startDate","endDate","startTimestamp","getTime","endTimestamp","response","get","params","instId","bar","before","toString","after","limit","candleData","data","map","candle","x","parseInt","y","parseFloat","label","borderColor","backgroundColor","error","console","options","responsive","scales","type","time","unit","tooltipFormat","title","display","text","beginAtZero","plugins","legend","position","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Paul2/OneDrive/桌面/bitcoinweb/bitcoinweb-main/比特雪球DCA/client/src/BitcoinPriceChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport axios from 'axios';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale,\n} from 'chart.js';\nimport 'chartjs-adapter-date-fns';\n\n// 註冊ChartJS所需的組件\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  TimeScale\n);\n\nconst BitcoinPriceChart = ({ range }) => {\n  const [chartData, setChartData] = useState({ datasets: [] });\n\n  // 計算條形大小的函數\n  const calculateBarSize = (start, end) => {\n    const diffTime = Math.abs(new Date(end) - new Date(start));\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24)); \n\n    if (diffDays <= 30) {\n      return '1H';\n    } else if (diffDays <= 180) {\n      return '1D';\n    } else if (diffDays <= 540) {\n      return '1W';\n    } else {\n      return '1M';\n    }\n  };\n\n  useEffect(() => {\n    const fetchHistoricalData = async () => {\n      try {\n        const barSize = calculateBarSize(range.startDate, range.endDate);\n  \n        // 轉換為Unix時間戳（毫秒）\n        const startTimestamp = new Date(range.startDate).getTime();\n        const endTimestamp = new Date(range.endDate).getTime();\n  \n        const response = await axios.get('https://www.okx.com/api/v5/market/history-index-candles', {\n          params: {\n            instId: 'BTC-USD',\n            bar: barSize,\n            // 使用Unix時間戳格式\n            before: startTimestamp.toString(),\n            after: endTimestamp.toString(),\n            limit: '100'\n          },\n        });\n\n        const candleData = response.data.data.map((candle) => ({\n          x: new Date(parseInt(candle[0])),\n          y: parseFloat(candle[4]),\n        }));\n\n        setChartData({\n          datasets: [\n            {\n              label: `BTC-USD Historical (${barSize})`,\n              data: candleData,\n              borderColor: 'rgb(33, 150, 243)',\n              backgroundColor: 'rgba(33, 150, 243, 0.5)',\n            },\n          ],\n        });\n\n      } catch (error) {\n        console.error('Error fetching historical data:', error);\n      }\n    };\n\n    fetchHistoricalData();\n  }, [range]);\n\n  const options = {\n    responsive: true,\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'day',\n          tooltipFormat: 'MM/dd/yyyy',\n        },\n        title: {\n          display: true,\n          text: 'Date',\n        },\n      },\n      y: {\n        beginAtZero: false,\n        title: {\n          display: true,\n          text: 'Price (USD)',\n        },\n      },\n    },\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Historical Bitcoin Price',\n      },\n    },\n  };\n\n  return (\n    <div className=\"chart-container\">\n      <Line options={options} data={chartData} />\n    </div>\n  );\n};\n\nexport default BitcoinPriceChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}